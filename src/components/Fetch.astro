<div>
    <div id="sholat"></div>
    <template id="sholat-template">
      <h3 class="mb-5">Jadwal Sholat - <span class="lokasi"></span>, <span class="daerah"></span></h3>
      <div class="tanggal mb-5"></div>
      <ul class="flex flex-col gap-4">
        <li class="p-4 bg-green-200 flex justify-between items-center"><strong>Imsak:</strong> <span class="imsak"></span></li>
        <li class="p-4 bg-green-200 flex justify-between items-center"><strong>Subuh:</strong> <span class="subuh"></span></li>
        <li class="p-4 bg-green-200 flex justify-between items-center"><strong>Terbit:</strong> <span class="terbit"></span></li>
        <li class="p-4 bg-green-200 flex justify-between items-center"><strong>Dhuha:</strong> <span class="dhuha"></span></li>
        <li class="p-4 bg-green-200 flex justify-between items-center"><strong>Dzuhur:</strong> <span class="dzuhur"></span></li>
        <li class="p-4 bg-green-200 flex justify-between items-center"><strong>Ashar:</strong> <span class="ashar"></span></li>
        <li class="p-4 bg-green-200 flex justify-between items-center"><strong>Maghrib:</strong> <span class="maghrib"></span></li>
        <li class="p-4 bg-green-200 flex justify-between items-center"><strong>Isya:</strong> <span class="isya"></span></li>
      </ul>
    </template>
</div>


<script>
   const fetchJSON = async (url) => (await fetch(url)).json();

const getCityFromCoordinates = async (lat, lon) => {
  try {
    const data = await fetchJSON(`https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json`);
    return data?.address?.city || data?.address?.town || data?.address?.village || null;
  } catch (error) {
    console.error("Gagal mendapatkan nama kota:", error);
    return null;
  }
};

const getCityId = async (cityName) => {
  try {
    const { data, status } = await fetchJSON("https://api.myquran.com/v2/sholat/kota/semua");
    return status ? data.find(c => c.lokasi.toLowerCase().includes(cityName.toLowerCase()))?.id || null : null;
  } catch (error) {
    console.error("Gagal menemukan ID kota:", error);
    return null;
  }
};

const updateSholatTemplate = (data, jadwal) => {
  const template = document.getElementById("sholat-template").content.cloneNode(true);
  Object.entries({ lokasi: data.lokasi, daerah: data.daerah, ...jadwal }).forEach(([key, value]) => {
    const el = template.querySelector(`.${key}`);
    if (el) el.textContent = value;
  });

  const container = document.getElementById("sholat");
  container.innerHTML = "";
  container.appendChild(template);
};

const getSholatData = () => {
  const container = document.getElementById("sholat");

  if (!navigator.geolocation) {
    container.innerHTML = "<p>Geolocation tidak didukung.</p>";
    return;
  }

  // Tampilkan loading
  container.innerHTML = "<div class='loader'></div>";

  navigator.geolocation.getCurrentPosition(async ({ coords: { latitude: lat, longitude: lon } }) => {
    try {
      const cityName = await getCityFromCoordinates(lat, lon);
      if (!cityName) throw new Error("Kota tidak ditemukan.");

      const cityId = await getCityId(cityName);
      if (!cityId) throw new Error("ID kota tidak ditemukan.");

      const today = new Date().toISOString().split("T")[0];
      const { data, status } = await fetchJSON(`https://api.myquran.com/v2/sholat/jadwal/${cityId}/${today}`);

      if (!status) throw new Error("Gagal mengambil data sholat.");
      
      updateSholatTemplate(data, data.jadwal);
    } catch (error) {
      console.error("Error:", error);
      container.innerHTML = "<p>Terjadi kesalahan saat mengambil data.</p>";
    }
  }, (error) => {
    console.error("Gagal mendapatkan lokasi:", error);
    container.innerHTML = "<p>Gagal mendeteksi lokasi.</p>";
  });
};

// Jalankan saat halaman dimuat
getSholatData();


</script>